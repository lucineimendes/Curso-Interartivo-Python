[
    {
        "id": "python-basico",
        "name": "Python B√°sico",
        "short_description": "Aprenda os fundamentos da programa√ß√£o com Python, incluindo sintaxe b√°sica, tipos de dados e estruturas de controle.",
        "description": "Este n√≠vel inicial tem como objetivo fornecer uma base s√≥lida em programa√ß√£o utilizando a linguagem Python. Os alunos aprender√£o os conceitos fundamentais da programa√ß√£o, a sintaxe b√°sica do Python, os tipos de dados, estruturas de controle de fluxo e fun√ß√µes. Ao final deste n√≠vel, os alunos estar√£o aptos a escrever programas simples em Python e compreender os princ√≠pios b√°sicos da l√≥gica de programa√ß√£o.",
        "level": "B√°sico",
        "duration": "20 horas",
        "prerequisites": "Nenhum conhecimento pr√©vio necess√°rio",
        "objectives": [
            "Compreender os princ√≠pios fundamentais da programa√ß√£o e l√≥gica computacional.",
            "Instalar e configurar o ambiente de desenvolvimento Python.",
            "Escrever e executar programas simples em Python utilizando um IDE.",
            "Utilizar os tipos de dados b√°sicos do Python (inteiros, floats, strings, booleanos).",
            "Empregar operadores aritm√©ticos, l√≥gicos e de compara√ß√£o em Python.",
            "Implementar estruturas de controle de fluxo (condicionais e loops) em programas Python.",
            "Trabalhar com tipos de dados compostos como listas, tuplas, dicion√°rios e conjuntos.",
            "Definir e utilizar fun√ß√µes em Python, compreendendo o conceito de escopo de vari√°veis.",
            "Aplicar os conceitos aprendidos em pequenos projetos pr√°ticos, como calculadoras simples, jogos de adivinha√ß√£o e manipula√ß√£o de listas."
        ],
        "learning_path": {
            "stage1": {
                "name": "Fundamentos",
                "modules": [
                    {
                        "id": "ambiente-desenvolvimento",
                        "title": "Ambiente de Desenvolvimento",
                        "concepts": [
                            "instala√ß√£o",
                            "IDE",
                            "primeiro programa"
                        ],
                        "revisited_in": [
                            "python-intermediario.ambientes-virtuais"
                        ]
                    },
                    {
                        "id": "variaveis-tipos",
                        "title": "Vari√°veis e Tipos de Dados",
                        "concepts": [
                            "n√∫meros",
                            "strings",
                            "booleanos"
                        ],
                        "revisited_in": [
                            "python-intermediario.poo",
                            "python-avancado.metaclasses"
                        ]
                    }
                ]
            },
            "stage2": {
                "name": "Estruturas B√°sicas",
                "modules": [
                    {
                        "id": "estruturas-controle",
                        "title": "Estruturas de Controle",
                        "concepts": [
                            "if/else",
                            "loops b√°sicos"
                        ],
                        "revisited_in": [
                            "python-intermediario.funcoes-avancadas",
                            "python-avancado.generators"
                        ]
                    },
                    {
                        "id": "funcoes-basicas",
                        "title": "Fun√ß√µes B√°sicas",
                        "concepts": [
                            "defini√ß√£o",
                            "par√¢metros",
                            "retorno"
                        ],
                        "revisited_in": [
                            "python-intermediario.decoradores",
                            "python-avancado.functional"
                        ]
                    }
                ]
            }
        },
        "projects": {
            "mini": [
                {
                    "id": "calculadora",
                    "title": "Calculadora Simples",
                    "concepts": [
                        "variaveis-tipos",
                        "funcoes-basicas"
                    ],
                    "difficulty": "üêç"
                }
            ],
            "final": {
                "id": "jogo-adivinhacao",
                "title": "Jogo de Adivinha√ß√£o",
                "concepts": [
                    "estruturas-controle",
                    "funcoes-basicas"
                ],
                "difficulty": "üêçüêç"
            }
        },
        "lessons_file": "basic/lessons.json",
        "exercises_file": "basic/exercises.json"
    },
    {
        "id": "python-intermediario",
        "name": "Python Intermedi√°rio",
        "short_description": "Aprofunde seus conhecimentos em Python com POO, manipula√ß√£o de arquivos e bibliotecas essenciais.",
        "description": "Neste n√≠vel, os alunos aprofundar√£o seus conhecimentos em Python, explorando conceitos avan√ßados da linguagem e bibliotecas essenciais para diversas aplica√ß√µes. Ser√£o introduzidos os pilares da Programa√ß√£o Orientada a Objetos (POO) em Python, manipula√ß√£o de arquivos e dados em diferentes formatos, express√µes regulares, requisi√ß√µes web e introdu√ß√£o a bancos de dados. O foco estar√° na aplica√ß√£o pr√°tica do Python para resolver problemas mais complexos e preparar os alunos para o desenvolvimento de projetos maiores.",
        "level": "Intermedi√°rio",
        "duration": "40 horas",
        "prerequisites": "Conhecimentos b√°sicos de Python",
        "objectives": [
            "Aplicar os princ√≠pios da Programa√ß√£o Orientada a Objetos (POO) em Python.",
            "Criar e organizar m√≥dulos e pacotes Python para estruturar projetos maiores.",
            "Realizar opera√ß√µes avan√ßadas com arquivos e pastas, incluindo manipula√ß√£o de diferentes formatos de arquivos (CSV, JSON).",
            "Utilizar express√µes regulares para busca e manipula√ß√£o avan√ßada de strings.",
            "Realizar requisi√ß√µes web e interagir com APIs REST utilizando bibliotecas Python.",
            "Conectar e interagir com bancos de dados utilizando Python.",
            "Implementar testes unit√°rios para garantir a qualidade e robustez do c√≥digo.",
            "Utilizar ambientes virtuais para gerenciar depend√™ncias de projetos Python."
        ],
        "learning_path": {
            "stage1": {
                "name": "POO e Estruturas Avan√ßadas",
                "modules": [
                    {
                        "id": "poo-fundamentos",
                        "title": "POO Fundamentos",
                        "concepts": [
                            "classes",
                            "objetos",
                            "heran√ßa"
                        ],
                        "builds_on": [
                            "python-basico.variaveis-tipos"
                        ],
                        "revisited_in": [
                            "python-avancado.design-patterns"
                        ]
                    }
                ]
            }
        },
        "lessons_file": "intermediate/lessons.json",
        "exercises_file": "intermediate/exercises.json"
    },
    {
        "id": "python-avancado",
        "name": "Python Avan√ßado",
        "short_description": "Domine t√≥picos avan√ßados como Design Patterns, metaclasses, programa√ß√£o concorrente e frameworks web.",
        "description": "O n√≠vel avan√ßado do curso de Python visa aprofundar o conhecimento dos alunos em t√≥picos especializados e prepar√°-los para √°reas de atua√ß√£o mais espec√≠ficas dentro do ecossistema Python. Ser√£o abordados temas como Design Patterns, metaclasses, decoradores, geradores, programa√ß√£o concorrente e paralela, desenvolvimento web com frameworks, ci√™ncia de dados, e outras √°reas de especializa√ß√£o como automa√ß√£o, seguran√ßa, desenvolvimento de jogos ou computa√ß√£o cient√≠fica. Os alunos ir√£o desenvolver projetos complexos e abrangentes, aplicando o conhecimento adquirido nos n√≠veis anteriores e demonstrando profici√™ncia em Python para resolver problemas de alta complexidade",
        "level": "Avan√ßado",
        "duration": "80 horas",
        "prerequisites": "Conhecimentos intermedi√°rios de Python",
        "objectives": [
            "Compreender e aplicar Design Patterns comuns em Python.",
            "Utilizar metaclasses, decorators e geradores para otimizar o c√≥digo.",
            "Implantar programa√ß√£o concorrente e paralela em Python.",
            "Aplicar os princ√≠pios da Programa√ß√£o Orientada a Objetos (POO) em Python.",
            "Criar e organizar m√≥dulos e pacotes Python para estruturar projetos maiores.",
            "Realizar opera√ß√µes avan√ßadas com arquivos e pastas, incluindo manipula√ß√£o de diferentes formatos de arquivos (CSV, JSON).",
            "Utilizar express√µes regulares para busca e manipula√ß√£o avan√ßada de strings.",
            "Realizar requisi√ß√µes web e interagir com APIs REST utilizando bibliotecas Python.",
            "Conectar e interagir com bancos de dados utilizando Python.",
            "Implementar testes unit√°rios para garantir a qualidade e robustez do c√≥digo.",
            "Utilizar ambientes virtuais para gerenciar depend√™ncias de projetos Python.",
            "Desenvolver projetos pr√°ticos avan√ßados e projetos finais de curso que demonstrem a integra√ß√£o e aplica√ß√£o de conhecimentos avan√ßados de Python."
        ],
        "lessons_file": "advanced/lessons.json",
        "exercises_file": "advanced/exercises.json"
    }
]